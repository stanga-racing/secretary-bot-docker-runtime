version: 2.1

executors:
  docker_publisher:
    docker:
      - image: docker:latest

jobs:
  checkout_code:
    working_directory: ~/secretary_bot_runtime
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Install CA Certificates
          command: apk add --no-cache ca-certificates
      - checkout
      - save_cache:
          name: Saving Git Repository To Cache
          key: v1_repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/secretary_bot_runtime

  build_docker_image:
    working_directory:
      ~/secretary_bot_runtime
    executor: docker_publisher
    steps:
      - restore_cache:
          name: Restoring Git Repository From Cache
          key: v1_repo-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build \
              --rm \
              -t $DOCKER_IMAGE_NAME:latest \
              -f Dockerfile \
              .
      - run:
          name: Initialize Cache Directory For Docker Image
          command: |
            mkdir ~/secretary_bot_runtime/docker
      - run:
          name: Archive Docker Image
          command: |
            docker save -o ~/secretary_bot_runtime/docker/image.tar $DOCKER_IMAGE_NAME:latest
      - save_cache:
          name: Saving Docker Image To Cache
          key: v1_docker-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/secretary_bot_runtime/docker

  deploy_docker_image:
    working_directory:
      ~/secretary_bot_runtime
    executor: docker_publisher
    steps:
      - restore_cache:
          name: Restoring Docker Image From Cache
          key: v1_docker-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run:
          name: Load Docker Image
          command: |
            docker load -i ~/secretary_bot_runtime/docker/image.tar
      - run:
          name: Login to Docker Hub
          command: |
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
      - run:
          name: Push Image to Docker Hub
          command: |
            docker push $DOCKER_IMAGE_NAME:latest

workflows:
  version: 2
  build:
    jobs:
      - checkout_code
      - build_docker_image:
          requires:
            - checkout_code
      - deploy_docker_image:
          requires:
            - build_docker_image
